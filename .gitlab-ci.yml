# We have 2 stage Test and Deploy
stages:
  - test
  - deploy

# Config cache
cache:
  paths:
    - node_modules/

# Test job
test:
  # Docker image
  image: node:14
  # Attach Test job to Test stage
  stage: test
  # Config to use GitLab Shared Runner with Executor Docker
  tags:
    - gitlab-org-docker
  script:
    - echo "DB_USERNAME"=$DB_USERNAME > .env.test
    - echo "DB_PASSWORD"=$DB_PASSWORD >> .env.test
    - echo "DB_DATABASE"=$DB_DATABASE_TEST >> .env.test
    - echo "DB_HOST"=$DB_HOST >> .env.test
    - echo "DB_DIALECT"=$DB_DIALECT >> .env.test
    - echo "EMAIL"=$EMAIL >> .env.test
    - echo "PASSWORD"=$PASSWORD >> .env.test
    - echo "JWT_SECRET"=$JWT_SECRET >> .env.test
    - npm i
    - NODE_ENV=test npx sequelize db:drop
    - NODE_ENV=test npx sequelize db:create
    - NODE_ENV=test npx sequelize db:migrate
    - NODE_ENV=test npx sequelize db:seed:all
    - npm run test
    - NODE_ENV=test npx sequelize db:drop
  # Defines the names of branches and tags the job runs for
  only:
    - master

# Deploy job
deploy:
  type: deploy
  # Attach Deploy job to Deploy stage
  stage: deploy
  # Config to use our Runner with Executor Shell
  tags:
    - washme-production
  script:
    # Only copy changed files to project folder
    - cp -r -u .sequelizerc * $PROJECT_DIR
    - cd $PROJECT_DIR
    - echo "DB_USERNAME"=$DB_USERNAME > .env.production
    - echo "DB_PASSWORD"=$DB_PASSWORD >> .env.production
    - echo "DB_DATABASE"=$DB_DATABASE_PRODUCTION >> .env.production
    - echo "DB_HOST"=$DB_HOST >> .env.production
    - echo "DB_DIALECT"=$DB_DIALECT >> .env.production
    - echo "EMAIL"=$EMAIL >> .env.production
    - echo "PASSWORD"=$PASSWORD >> .env.production
    - echo "JWT_SECRET"=$JWT_SECRET >> .env.production
    - yarn install
    - NODE_ENV=production npx sequelize db:create
    - NODE_ENV=production npx sequelize db:migrate
    # Restart NodeJS service
    - yarn run stop
    - yarn run start
  only:
    - master
